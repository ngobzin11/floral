__FUNCTION__ oddevensort(A)
__DECLARE_AS__(n) __LENGTH_OF__(A)
__DECLARE_AS__(sorted)  __FALSE__
__WHILE__  __NOT__ sorted __DO__
__SET_TO__(sorted)  __TRUE__
__FOR__ __DECLARE_AS__(i) 1; i __LESS_THAN__ n __MINUS__ 1; __INCREMENT_BY__(i, 2)  __DO__
__DECLARE_AS__(m) i __PLUS__ 1
__DECLARE_AS__(a) __ELEMENT_AT_FROM__(i, A)
__DECLARE_AS__(b) __ELEMENT_AT_FROM__(m, A)
__IF__ a __LESS_THAN__ b __THEN__
__SET_TO__(A) __ARRAYS_SWAP__(m, i, A)
__IF__ sorted __THEN__
__SET_TO__(sorted)  __FALSE__
__END__
__END__
__END__
__FOR__ __DECLARE_AS__(i) 0; i __LESS_THAN__ n __MINUS__ 1; __INCREMENT_BY__(i, 2)  __DO__
__DECLARE_AS__(m) i __PLUS__ 1
__DECLARE_AS__(a) __ELEMENT_AT_FROM__(i, A)
__DECLARE_AS__(b) __ELEMENT_AT_FROM__(m, A)
__IF__ a __GREATER_THAN__ b __THEN__
__SET_TO__(A) __ARRAYS_SWAP__(m, i, A)
__IF__ sorted __THEN__
__SET_TO__(sorted)  __FALSE__
__END__
__END__
__END__
__END__
__END__
__FUNCTION__ __ARRAYS_SWAP__(x, y, arr)
__IF__ arr __IDENTICAL_TO__  __NULL__  __THEN__
__RETURN__ arr
__END__
__DECLARE_AS__(n) __LENGTH_OF__(arr)
__IF__ x __GREATER_THAN_OR_EQUAL_TO__ n __OR__ y __GREATER_THAN_OR_EQUAL_TO__ n __THEN__
__RETURN__ arr
__END__
__SET_TO__(__ELEMENT_AT_FROM__(x, arr) ) __ELEMENT_AT_FROM__(y, arr)
__SET_TO__(__ELEMENT_AT_FROM__(y, arr) ) (__ELEMENT_AT_FROM__(x, arr) )
__RETURN__ arr
__END__
